<!--
  ~ Copyright 2013-2016 Sergey Ignatov, Alexander Zolotov, Florin Patan
  ~
  ~ Licensed under the Apache License, Version 2.0 (the "License");
  ~ you may not use this file except in compliance with the License.
  ~ You may obtain a copy of the License at
  ~
  ~ http://www.apache.org/licenses/LICENSE-2.0
  ~
  ~ Unless required by applicable law or agreed to in writing, software
  ~ distributed under the License is distributed on an "AS IS" BASIS,
  ~ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  ~ See the License for the specific language governing permissions and
  ~ limitations under the License.
  -->
<consulo-plugin url="https://github.com/consulo/consulo-google-go">
	<id>consulo.google.go</id>
	<name>Go (golang.org)</name>
	<version>SNAPSHOT</version>
	<vendor>consulo.io &amp; github.com/go-lang-plugin-org</vendor>
	<category>Custom Languages</category>
	<tags>
		<tag>custom.language</tag>
	</tags>

	<depends>com.intellij.regexp</depends>
	<depends optional="true">com.intellij.spellchecker</depends>


	<extensions defaultExtensionNs="consulo">
		<liveTemplateContext implementation="com.goide.template.GoLiveTemplateContextType$File"/>
		<liveTemplateContext implementation="com.goide.template.GoLiveTemplateContextType$Block"/>
		<liveTemplateContext implementation="com.goide.template.GoLiveTemplateContextType$Type"/>
		<liveTemplateContext implementation="com.goide.template.GoLiveTemplateContextType$Expression"/>
		<liveTemplateContext implementation="com.goide.template.GoLiveTemplateContextType$Tag"/>
		<liveTemplateContext implementation="com.goide.template.GoLiveTemplateContextType$TagLiteral"/>
		<liveTemplateContext implementation="com.goide.template.GoLiveTemplateContextType$Statement"/>



		<localInspection language="go" displayName="Unused constant inspection" groupPath="Go"
						 groupName="Declaration redundancy" enabledByDefault="true" level="WARNING"
						 implementationClass="com.goide.inspections.unresolved.GoUnusedConstInspection"/>

		<localInspection language="go" displayName="Unused exported function inspection" groupPath="Go"
						 groupName="Declaration redundancy" enabledByDefault="true" level="WARNING"
						 implementationClass="com.goide.inspections.unresolved.GoUnusedExportedFunctionInspection"/>
		<localInspection language="go" displayName="Unused function inspection" groupPath="Go"
						 groupName="Declaration redundancy" enabledByDefault="true" level="WARNING"
						 implementationClass="com.goide.inspections.unresolved.GoUnusedFunctionInspection"/>
		<localInspection language="go" displayName="Unused parameter inspection" groupPath="Go"
						 groupName="Declaration redundancy" enabledByDefault="true" level="WARNING"
						 implementationClass="com.goide.inspections.unresolved.GoUnusedParameterInspection"/>
		<localInspection language="go" displayName="Bool condition inspection" groupPath="Go"
						 groupName="Declaration redundancy" enabledByDefault="true" level="WARNING"
						 implementationClass="com.goide.inspections.GoBoolExpressionsInspection"/>

		<localInspection language="go" displayName="Empty declaration inspection" groupPath="Go"
						 groupName="Declaration redundancy" enabledByDefault="true" level="WARNING"
						 implementationClass="com.goide.inspections.GoEmptyDeclarationInspection" cleanupTool="true"/>
		<localInspection language="go" displayName="Redundant second index in slices inspection" groupPath="Go"
						 groupName="Declaration redundancy" enabledByDefault="true" level="WARNING"
						 implementationClass="com.goide.inspections.GoRedundantSecondIndexInSlicesInspection" cleanupTool="true"/>
		<localInspection language="go" displayName="Redundant blank argument in range inspection" groupPath="Go"
						 groupName="Declaration redundancy" enabledByDefault="true" level="WARNING"
						 implementationClass="com.goide.inspections.GoRedundantBlankArgInRangeInspection" cleanupTool="true"/>
		<localInspection language="go" displayName="Redundant type declaration in composite literals" groupPath="Go"
						 groupName="Declaration redundancy" enabledByDefault="true" level="WARNING"
						 implementationClass="com.goide.inspections.GoRedundantTypeDeclInCompositeLit" cleanupTool="true"/>
		<!-- /unused inspections -->

		<!-- redeclare inspections -->
		<localInspection language="go" displayName="Duplicate fields and methods inspection" groupPath="Go"
						 groupName="Redeclared symbols" enabledByDefault="true" level="ERROR"
						 implementationClass="com.goide.inspections.GoDuplicateFieldsOrMethodsInspection"/>
		<localInspection language="go" displayName="Duplicate functions and methods inspection" groupPath="Go"
						 groupName="Redeclared symbols" enabledByDefault="true" level="ERROR"
						 implementationClass="com.goide.inspections.GoDuplicateFunctionOrMethodInspection"/>
		<localInspection language="go" displayName="Duplicate argument" groupPath="Go"
						 groupName="Redeclared symbols" enabledByDefault="true" level="ERROR"
						 implementationClass="com.goide.inspections.GoDuplicateArgumentInspection"/>
		<localInspection language="go" displayName="Duplicate return argument" groupPath="Go"
						 groupName="Redeclared symbols" enabledByDefault="true" level="ERROR"
						 implementationClass="com.goide.inspections.GoDuplicateReturnArgumentInspection"/>
		<localInspection language="go" displayName="Redeclare import as function" groupPath="Go"
						 groupName="Redeclared symbols" enabledByDefault="true" level="ERROR"
						 implementationClass="com.goide.inspections.GoRedeclareImportAsFunctionInspection"/>
		<!-- /redeclare inspections -->

		<!-- code style issues -->
		<localInspection language="go" displayName="Comment of exported element starts with incorrect name" groupPath="Go"
						 groupName="Code style issues" enabledByDefault="false" level="WEAK WARNING"
						 implementationClass="com.goide.inspections.GoCommentStartInspection"/>
		<localInspection language="go" displayName="Exported element should have its own declaration" groupPath="Go"
						 groupName="Code style issues" enabledByDefault="true" level="WEAK WARNING"
						 implementationClass="com.goide.inspections.GoExportedOwnDeclarationInspection"/>
		<localInspection language="go" displayName="Struct initialization without field names" groupPath="Go"
						 groupName="Code style issues" enabledByDefault="true" level="WEAK WARNING"
						 implementationClass="com.goide.inspections.GoStructInitializationInspection"/>
		<localInspection language="go" displayName="Receiver has generic name" groupPath="Go"
						 groupName="Code style issues" enabledByDefault="true" level="WEAK WARNING"
						 implementationClass="com.goide.inspections.GoReceiverNamesInspection"/>
		<!-- /code style issues -->

		<!-- probable bugs -->
		<localInspection language="go" displayName="Reserved word used as name" groupPath="Go"
						 groupName="Probable bugs" enabledByDefault="true" level="WARNING"
						 implementationClass="com.goide.inspections.GoReservedWordUsedAsNameInspection"/>
		<localInspection language="go" displayName="Imported package name as name identifier" groupPath="Go"
						 groupName="Probable bugs" enabledByDefault="true" level="WARNING"
						 implementationClass="com.goide.inspections.GoImportUsedAsNameInspection"/>
		<localInspection language="go" displayName="Malformed struct tag" groupPath="Go"
						 groupName="Probable bugs" enabledByDefault="true" level="WARNING"
						 implementationClass="com.goide.inspections.GoStructTagInspection"/>
		<localInspection language="go" displayName="Printf/Logf placeholder handler" groupPath="Go"
						 groupName="Probable bugs" enabledByDefault="true" level="WARNING"
						 implementationClass="com.goide.inspections.GoPlaceholderCountInspection"/>
		<!-- /probable bugs -->

		<!-- control flow issues -->
		<localInspection language="go" displayName="Missing return at end of function" groupPath="Go"
						 groupName="Control flow issues" enabledByDefault="true" level="ERROR"
						 implementationClass="com.goide.inspections.GoMissingReturnInspection"/>
		<localInspection language="go" displayName="Used as value in condition" groupPath="Go"
						 groupName="Control flow issues" enabledByDefault="true" level="ERROR"
						 implementationClass="com.goide.inspections.GoUsedAsValueInCondition"/>
		<localInspection language="go" displayName="Infinite for loop" groupPath="Go"
						 groupName="Control flow issues" enabledByDefault="true" level="ERROR"
						 implementationClass="com.goide.inspections.GoInfiniteForInspection"/>
		<localInspection language="go" displayName="Defer in loop" groupPath="Go"
						 groupName="Control flow issues" enabledByDefault="true" level="WEAK WARNING"
						 implementationClass="com.goide.inspections.GoDeferInLoopInspection"/>
		<localInspection language="go" displayName="Range iteration on illegal type" groupPath="Go"
						 groupName="Control flow issues" enabledByDefault="true" level="ERROR"
						 implementationClass="com.goide.inspections.GoRangeIterationOnIllegalTypeInspection"/>
		<localInspection language="go" displayName="Assignment to receiver" groupPath="Go"
						 groupName="Control flow issues" enabledByDefault="true" level="WEAK WARNING"
						 implementationClass="com.goide.inspections.GoAssignmentToReceiverInspection"/>
		<localInspection language="go" displayName="Direct assignment to struct field in map" groupPath="Go"
						 groupName="Control flow issues" enabledByDefault="true" level="ERROR"
						 implementationClass="com.goide.inspections.GoDirectAssignToStructFieldInMapInspection"/>
		<!-- /control flow issues -->

		<!-- general -->
		<localInspection language="go" displayName="Unresolved reference inspection" groupPath="Go"
						 groupName="General" enabledByDefault="true" level="ERROR"
						 implementationClass="com.goide.inspections.unresolved.GoUnresolvedReferenceInspection"/>
		<localInspection language="go" displayName="Assignment to constant" groupPath="Go"
						 groupName="General" enabledByDefault="true" level="ERROR"
						 implementationClass="com.goide.inspections.unresolved.GoAssignmentToConstantInspection"/>
		<localInspection language="go" displayName="Assignment nil without explicit type" groupPath="Go"
						 groupName="General" enabledByDefault="true" level="ERROR"
						 implementationClass="com.goide.inspections.GoAssignmentNilWithoutExplicitTypeInspection"/>
		<localInspection language="go" displayName="Incorrect variadic parameter" groupPath="Go"
						 groupName="General" enabledByDefault="true" level="ERROR"
						 implementationClass="com.goide.inspections.GoFunctionVariadicParameterInspection"/>
		<localInspection language="go" displayName="Incorrect variable declaration" groupPath="Go"
						 groupName="General" enabledByDefault="true" level="ERROR"
						 implementationClass="com.goide.inspections.GoVarDeclarationInspection"/>
		<localInspection language="go" displayName="No new variables on left side of :=" groupPath="Go"
						 groupName="General" enabledByDefault="true" level="ERROR"
						 implementationClass="com.goide.inspections.GoNoNewVariablesInspection"/>
		<localInspection language="go" displayName="Function call inspection" groupPath="Go"
						 groupName="General" enabledByDefault="true" level="ERROR"
						 implementationClass="com.goide.inspections.GoFunctionCallInspection"/>
		<localInspection language="go" displayName="Defer/go statements check" groupPath="Go"
						 groupName="General" enabledByDefault="true" level="ERROR"
						 implementationClass="com.goide.inspections.GoDeferGoInspection"/>
		<localInspection language="go" displayName="Multiple packages in directory declaration" groupPath="Go"
						 groupName="General" enabledByDefault="true" level="ERROR"
						 implementationClass="com.goide.inspections.GoMultiplePackagesInspection"/>
		<localInspection language="go" displayName="Usage of cgo in tests is not supported" groupPath="Go"
						 groupName="General" enabledByDefault="true" level="ERROR"
						 implementationClass="com.goide.inspections.GoCgoInTestInspection"/>
		<localInspection language="go" displayName="Wrong test declaration" groupPath="Go"
						 groupName="General" enabledByDefault="true" level="ERROR"
						 implementationClass="com.goide.inspections.GoTestSignaturesInspection"/>
		<localInspection language="go" displayName="Self import" groupPath="Go"
						 groupName="General" enabledByDefault="true" level="ERROR"
						 implementationClass="com.goide.inspections.GoSelfImportInspection"/>
		<localInspection language="go" displayName="Invalid package import" groupPath="Go"
						 groupName="General" enabledByDefault="true" level="ERROR"
						 implementationClass="com.goide.inspections.GoInvalidPackageImportInspection"/>
		<localInspection language="go" displayName="Embedded interface pointer" groupPath="Go"
						 groupName="General" enabledByDefault="true" level="ERROR"
						 implementationClass="com.goide.inspections.GoEmbeddedInterfacePointerInspection"/>
		<localInspection language="go" displayName="Need trailing comma before newline in composite literal" groupPath="Go"
						 groupName="General" enabledByDefault="true" level="ERROR"
						 implementationClass="com.goide.inspections.GoAddTrailingCommaInspection"/>
		<localInspection language="go" displayName="Underscore used as value" groupPath="Go"
						 groupName="General" enabledByDefault="true" level="ERROR"
						 implementationClass="com.goide.inspections.GoUnderscoreUsedAsValueInspection"/>
		<localInspection language="go" displayName="Invalid strings and runes" groupPath="Go"
						 groupName="General" enabledByDefault="true" level="ERROR"
						 implementationClass="com.goide.inspections.GoInvalidStringOrCharInspection"/>
		<localInspection language="go" displayName="Invalid anonymous field definition type " groupPath="Go"
						 groupName="General" enabledByDefault="true" level="ERROR"
						 implementationClass="com.goide.inspections.GoAnonymousFieldDefinitionTypeInspection"/>
		<localInspection language="go" displayName="Mixed named and unnamed parameters" groupPath="Go"
						 groupName="General" enabledByDefault="true" level="ERROR"
						 implementationClass="com.goide.inspections.GoMixedNamedUnnamedParametersInspection"/>
		<localInspection language="go" displayName="Mismatched types: byte and string" groupPath="Go"
						 groupName="General" enabledByDefault="true" level="ERROR"
						 implementationClass="com.goide.inspections.GoStringAndByteTypeMismatchInspection"/>
	</extensions>
	<actions>
		<action id="Go.NewGoFile" class="com.goide.actions.file.GoCreateFileAction" text="Go File" description="Create new Go file" require-module-extensions="google-go">
			<add-to-group group-id="NewGroup" anchor="before" relative-to-action="NewFile"/>
		</action>
		<group id="GoTestGenerateGroup" class="com.goide.generate.GoGenerateTestMethodActionGroup">
			<add-to-group group-id="GenerateGroup" anchor="first"/>
		</group>
		<group id="GoTools" text="Go Tools" description="Go External Tools" icon="consulo.google.go.GoogleGoIconGroup@go" popup="true" require-module-extensions="google-go">
			<action id="GoFmtFileAction" class="com.goide.actions.tool.GoFmtFileAction" text="Go fmt file"
					description="Format selected file with go fmt util">
				<keyboard-shortcut keymap="$default" first-keystroke="shift ctrl alt F"/>
			</action>
			<action id="GoFmtProjectAction" class="com.goide.actions.tool.GoFmtProjectAction" text="Go fmt project"
					description="Format project with go fmt util">
				<keyboard-shortcut keymap="$default" first-keystroke="shift ctrl alt P"/>
			</action>
			<action id="GoImportsFileAction" class="com.goide.actions.tool.GoImportsFileAction" text="Goimports file"
					description="Optimizes imports for selected file with goimports util">
			</action>
			<action id="GoTypeFileAction" class="com.goide.actions.tool.GoTypeFileAction" text="Gotype directory"
					description="Analyze types for current directory with gotype util">
			</action>
			<action id="GoVetFileAction" class="com.goide.actions.tool.GoVetFileAction" text="Go vet file"
					description="Lint selected file or directory with go vet tool">
			</action>
			<add-to-group group-id="CodeMenu" anchor="last"/>
			<add-to-group group-id="ProjectViewPopupMenu" anchor="last"/>
			<add-to-group group-id="EditorLangPopupMenu" anchor="last"/>
		</group>
	</actions>
</consulo-plugin>
