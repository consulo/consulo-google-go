<idea-plugin version="2" url="http://github.com/mtoader/google-go-lang-idea-plugin">
	<id>ro.redeul.google.go</id>
	<name>Google Go</name>
	<version>0.9.14</version>
	<vendor email="mtoader@gmail.com" url="http://redeul.ro">mtoader@gmail.com
	</vendor>
	<description>
		<![CDATA[
        <p>Intellij IDEA support for Go language (see http://golang.org).</p>
        <p>The plugin provides the following features:</p>

        <ul>
            <li>Basic language parsing and highlighting</li>
            <li>Code folding and Brace matching</li>
            <li>Comment/Uncomment (Single/Multiple line) support</li>
            <li>Go application file and library generation.</li>
            <li>Auto completion of sdk package names and/or local application packages.</li>
            <li>Compilation of the go applications (supported semantics are similar to those of gobuild)</li>
            <li>Native plugin code formatter</li>
            <li>GoTo class (go types) implementation</li>
            <li>ColorsAndSettings page with a new color scheme</li>
            <li>Completion/Resolution of vars/types/functions/structs/methods (works across some expression chains).</li>
            <li>Refactorings: Introduce variable/constant</li>
            <li>Inspections: Unused imports/variables/constants/parameters/symbols</li>
            <li>Inspections: Validate the format param for the fmt.Print suite of functions</li>
            <li>Inspections: Detect non constant expression used in constant declarations</li>
            <li>Intentions: Invert if condition/Merge nested 'if's/Split into 2 'if's/Convert switch statement to if chain.</li>
            <li>Intentions: Convert between interpreted string and raw string.</li>
            <li>Intention: Add/Remove parentheses.</li>
            <li>Intention: Move simple statement out.</li>
            <li>Inspection: Validate that the package names in files are correct with respect of the folder name.</li>
            <li>Documentation for functions, methods, variable, constants and types.</li>
            <li>Function parameter information.</li>
            <li>Ctrl+Shift+T to jump between source file and test file.</li>
            <li>Navigation from stack trace in output panel.</li>
            <li>Ctrl+Shift+Enter to add curly brackets for "func", "if" and "for" statements.</li>
            <li>Live templates: "sout", "souf", "soutm" and "soutp".</li>
            <li>Go aware imports optimizer and auto import generator</li>
            <li>Import usage highlighting (and detecting of wrong imports)</li>
            <li>Better Structure view</li>
            <li>Automatically add new line at end of file</li>
            <li>Force UTF-8 encoding for go files</li>
            <li>Detection of bundled Go Sdk packages (useful when deployed as GoIde)</li>
            <li>Run configuration creator (right click on a program file and you can run it). </li>
            <li>Go SDK (Go 1.0 on linux/mac/windows)</li>
            <li>Go module type</li>
            <li>Go App engine sdk type</li>
            <li>Go App engine credentials safe storage</li>
            <li>Added go application wizard</li>
            <li>Makefile based build system (bring your own Makefile). Experimental. Configured in project settings.</li>
            <li>Always use tabs instead of spaces (but configurable if desired).</li>
        </ul>
    ]]>
	</description>
	<change-notes>
		<![CDATA[
         <h3>0.9.14 changes:</h3>
            <ul>
                <li>[feature] Basic support for completion of the whole method set for an interface.</li>
                <li>[feature] Handle builtin function calls when doing type inference</li>
                <li>[bugfix] Don't show methods for local types twice in strucure view.</li>
                <li>[feature] Add the builtins to the list of methods that we want to be able to autocomplete.</li>
                <li>[bugfix] Make sure that by default go looks good on both dark and clear themes.</li>
                <li>[bugfix] Fixed some formatting edge cases.</li>
                <li>[bugfix] Resolving to variables declared in a select communication clause works.</li>
                <li>[feature] make/len/cap/true/false/nil are also highlighted as keywords.</li>
                <li>[bugfix] module relative imports are working properly inside the IDE.</li>
                <li>[bugfix] resolve should work inside select statement clauses.</li>
                <li>[bugfix] resolve should target the local package names first.</li>
                <li>[bugfix] Properly detect a go sdk installed via standard deb package in ubuntu.</li>
            </ul>
         <h3>0.9.13 changes:</h3>
            <ul>
                <li>[bugfix] Guard against a NPE when looking at old Go App Engine SDK's.</li>
                <li>[bugfix] Properly scan for a sdk in windows with go 1.0.3.</li>
                <li>[bugfix] Properly scan for a sdk in osx with go installed from golang.org / brew / compiled by hand.</li>
            </ul>
         <h3>0.9.12 changes:</h3>
            <ul>
                <li>[bugfix] IntelliJ Idea 12 compatibility fixes. Only available for Intellij 12 since 0.9.11</li>
                <li>[bugfix] If the current project has go modules it will disable the external compiler feature of IDEA.</li>
            </ul>
         <h3>0.9.11 changes:</h3>
            <ul>
                <li>[bugfix] NPE in certain cases when creating a test configuration.</li>
                <li>[bugfix] Fix wrong parsing of method/function parameter declarations.</li>
                <li>[bugfix] Don't report error for package "C" usage.</li>
                <li>[enhancement] List all promoted fields in auto completion list.</li>
                <li>[enhancement] In structure view, put all struct methods on the top of struct fields.</li>
                <li>[enhancement] Add auto completion for anonymous fields of structs.</li>
                <li>[enhancement] Support find usage of types, struct fields, function parameters, function results, method receiver, functions and methods.</li>
                <li>[enhancement] Add auto completion for variables declared in short var declaration and normal var declaration without explicit type.</li>
                <li>[enhancement] List all imported package names in basic completion, and all imported and unimported package names in second basic completion or no auto completion items are available.</li>
                <li>[feature] Add graphical test runner panel to show results of tests and benchmarks.</li>
                <li>[enhancement] Properly propagate the type of vars declared in a for range statement.</li>
            </ul>
         <h3>0.9.10 changes:</h3>
            <ul>
                <li>[bugfix] Tweaked the default package name for imports.</li>
                <li>[bugfix] Properly parse anonymous functiona parameters having a qualified type</li>
                <li>[bugfix] Add a space after ',' inside calls when reformatting</li>
                <li>[bugfix] Make the InvalidPackageName inspection better.</li>
                <li>[enhancement] The Test Run Configuration now is module scoped.</li>
            </ul>
         <h3>0.9.9 changes:</h3>
            <ul>
                <li>[bugfix] Properly transfer the types via a channel expression.</li>
                <li>[bugfix] Don't highlight functional variables as unused.</li>
                <li>[enhancement] Show the file methods inside the structure view.</li>
                <li>[enhancement] Use the complete method set for inherited structs.</li>
                <li>[enhancement] Automatic management of imports setting should be duplicated into the Go Settings dialog.</li>
                <li>[enhancement] Force GOROOT to the go folder when detecting SDK.</li>
                <li>[feature] Inspection/quickfixes for package names in files with respect to the expected go tools compatible structure.</li>
                <li>[feature] Generate go test run configuration by right clicking inside a test file (with proper handling of clicks inside a benchmark / test method).</li>
            </ul>
         <h3>0.9.6 changes:</h3>
            <ul>
                <li>[enhancement] Allow resolving of composite literal keys to match constants or vars.</li>
                <li>[enhancement] Don't mark function literals as unresolved.</li>
                <li>[features] Use tabs instead of spaces to layout the go source code.</li>
                <li>[bugfix] Always treat the lasts part of the path (when used as package name) as lowercase.</li>
                <li>[bugfix] Fix an infinite loop when parsing an incomplete struct type.</li>
                <li>[bugfix] Don't barf when a go module is created without source folders.</li>
            </ul>
         <h3>0.9.5 changes:</h3>
            <ul>
                <li>[enhancement] Automatic upgrade of Go SDK configuration when needed.</li>
                <li>[bugfixes] Enhanced resolution of methods.</li>
                <li>[bugfix] NPE fixes when handling invalid import declarations (@catalinc).</li>
                <li>[bugfix] Fix running of applications on windows (@catalinc).</li>
                <li>[bugfix] Fix running of applications in child folders.</li>
            </ul>
         <h3>0.9.4 changes:</h3>
            <ul>
                <li>[bugfix] Fix typename resolution for qualified types.</li>
            </ul>

         <h3>0.9.3 changes:</h3>
            <ul>
                <li>[feature] Added a warning about corrupt SDK inside a project.</li>
                <li>[feature] Fix the way we read the SDK type version.</li>
                <li>[bugfix] Updated the SDK detection to work properly when there are cross compilation libraries..</li>
                <li>[bugfix] Updated the compiler to use the proper tools and not call them directly from pkg/<os>_<version>.</li>
            </ul>

         <h3>0.9.0 changes:</h3>
            <ul>
                <li>[feature] Refactoring: Introduce variable.</li>
                <li>[feature] Refactoring: Introduce constant.</li>
                <li>[feature] Refactoring: Inline local variable.</li>
                <li>[feature] Refactoring: Inplace variable/function rename.</li>
                <li>[feature] Optimize import on the fly.</li>
                <li>[feature] Inspection: Unused imports.</li>
                <li>[feature] Inspection: Unused variables.</li>
                <li>[feature] Inspection: Unused constants.</li>
                <li>[feature] Inspection: Unused parameters.</li>
                <li>[feature] Inspection: fmt parameter inspection.</li>
                <li>[feature] Inspection: Function call inspection.</li>
                <li>[feature] Inspection: Import inspection.</li>
                <li>[feature] Inspection: Unresolved symbol inspection.</li>
                <li>[feature] Intention: Invert if condition.</li>
                <li>[feature] Intention: Merge nested 'if's.</li>
                <li>[feature] Intention: Split into 2 'if's.</li>
                <li>[feature] Intention: Convert switch statement to if chain.</li>
                <li>[feature] Intention: Convert between interpreted string and raw string.</li>
                <li>[feature] Intention: Add/Remove parentheses.</li>
                <li>[feature] Intention: Move simple statement out.</li>
                <li>[feature] Documentation for functions, methods, variable, constants and types.</li>
                <li>[feature] Function parameter information.</li>
                <li>[feature] Ctrl+Shift+T to jump between source file and test file.</li>
                <li>[feature] Navigation from stack trace in output panel.</li>
                <li>[feature] Ctrl+Shift+Enter to add curly brackets for "func", "if" and "for" statements.</li>
                <li>[enhancement] code folding improvement.</li>
                <li>[enhancement] Code formatter.</li>
                <li>[enhancement] File structure view.</li>
                <li>[enhancement] TODO's are shown in todo panel.</li>
                <li>[enhancement] Live templates: "sout", "souf", "soutm" and "soutp".</li>
                <li>[feature] Inspection: Detect non constant expression used in constant declarations</li>
                <li>[bugfix] Force the .go file to map to the proper file type.</li>
                <li>[bugfixes] Various parsing inconsistencies</li>
                <li>[enhancement] completion/resolution of struct members (expression/composite literals).</li>
                <li>[enhancement] completion/resolution improvements.</li>
            </ul>
         <h3>0.5.1 changes:</h3>
            <ul>
                <li>[feature] Support for Go 1 release</li>
            </ul>
         <h3>0.5.0 changes:</h3>
            <ul>
                <li>[feature] Go App engine sdk type</li>
                <li>[feature] Go App engine credentials safe storage</li>
                <li>[feature] Added go application wizard</li>
                <li>[bugfix] Pass the arguments on a run config as separate arguments</li>
                <li>[bugfix] Exception while saving the document (nested modification exception)</li>
                <li>[bugfix] Wrong highlighting of a map type with a function inner type</li>
                <li>[bugfix] Idea 11 compatibility</li>
            </ul>
         <h3>0.4.2 changes:</h3>
            <ul>
                <li>[enhancement] Enable control for the operators colors when doing syntax highlighting.</li>
            </ul>
         <h3>0.4.1 changes:</h3>
            <ul>
                <li>[bugfix] Revert to using Icons instead of PlatformIcons.</li>
            </ul>
		 <h3>0.4.0 changes:</h3>
                <ul>
                    <li>[feature] Detection of bundled Go Sdk packages (useful when deployed as GoIde)</li>
                    <li>[bugfix] NullPointerException while highlighting selector expression with non resolving context (Issue #34).</li>
                    <li>[feature] Partial error highlighting of non existent imported packages.</li>
                    <li>[feature] Run configuration creator (right click on a program file and you can run it). </li>
                    <li>[feature] Run configuration validation. </li>
                </ul>
         </h3>
		 <h3>0.3.18 changes:</h3>
                <ul>
                    <li>[bugfix] Fixed parsing error when the last function element is ...</li>
                    <li>[bugfix] Fixed multiline comment parsing in certain cases.</li>
                    <li>[bugfix] Fixed regression when parsing big const declaration with comments.</li>
                </ul>
         </h3>
		 <h3>0.3.17 changes:</h3>
                <ul>
                    <li>[feature] Improved completion (use the top level var and const declarations as completion variants).</li>
                </ul>
        </h3>
		 <h3>0.3.16 changes:</h3>
                <ul>
                    <li>[feature] Go aware imports optimizer (experimental).</li>
                </ul>
        </h3>
         <h3>0.3.15 changes:</h3>
                <ul>
                    <li>[feature] Support GO sdk as packaged by the gophers/go PPA on Ubuntu.</li>
                </ul>
        </h3>
        <h3>0.3.14 changes:</h3>
                <ul>
                    <li>[bugfix] Fix the broken run configuration on MacOS. https://github.com/alexandre-normand.</li>
                </ul>
        </h3>
        <h3>0.3.13 changes:</h3>
                <ul>
                    <li>[feature] Added simple Structure View for Go files. Thanks https://github.com/khronnuz.</li>
                </ul>
        </h3>
         <h3>0.3.12 changes:</h3>
                <ul>
                    <li>[feature] Using gofmt as formatter when formatting a file (Ctrl + Alt + L). Thanks https://github.com/khronnuz.</li>
                </ul>
        </h3>
        <h3>0.3.11 changes:</h3>
                <ul>
                    <li>Bump the stub index version.</li>
                </ul>
        </h3>
        <h3>0.3.10 changes:</h3>
                <ul>
                    <li>[bugfix] Go To function definitions was broken by the variable completion changes. Fixed.</li>
                    <li>[bugfix] Invalid error highlight when parsing a CompositeLiteral ending with a comma.</li>
                </ul>
        </h3>
        <h3>0.3.9 changes:</h3>
                <ul>
                    <li>[feature] Added a setting to allow disabling of the variable completion.</li>
                    <li>[bugfix] fix ArrayIndexOutOfBoundException when running on some wild code.</li>
                </ul>
        </h3>
        <h3>0.3.7 changes:</h3>
                <ul>
                    <li>[feature] experimental Makefile based build system (bring your on Makefile's). Configured in project settings. Thanks to https://github.com/alexandre-normand</li>
                    <li>[feature] some more completion options on variables (work in progress)</li>
                    <li>[bugfix] invalid framework import causing incompatibility with idea 10.5+ </li>
                </ul>
        </h3>
        <h3>0.3.6 changes:</h3>
                <ul>
                    <li>[feature] GoTo class (go types) implementation</li>
                </ul>
        </h3>
        <h3>0.3.5 changes:</h3>
                <ul>
                    <li>[bugfix] Go to error on compilation error. Thanks alexandre :)</li>
                </ul>
        </h3>
        <h3>0.3.4 changes:</h3>
                <ul>
                    <li>[feature] Properly resolve not public types from the current package.</li>
                    <li>[feature] Function names completion (from current package and imported packages) where an identifier is possible.</li>
                </ul>
        </h3>
        <h3>0.3.3 changes:</h3>
                <ul>
                    <li>[bugfix] Minor bug with types completion</li>
                </ul>
        </h3>
        <h3>0.3.2 changes:</h3>
                <ul>
                    <li>[feature] Fixed and upgraded go types resolution and completion</li>
                </ul>
        </h3>
        <h3>0.3.1 changes:</h3>
                <ul>
                    <li>[feature] Removed the version limitation</li>
                </ul>
        </h3>
        <h3>0.3.0 changes:</h3>
                <ul>
                    <li>[bugfix] Fixed to run under Idea 10 version</li>
                    <li>[feature] Adding indexing of the go SDK (right now only for package names. More to follow</li>
                    <li>[feature] Added go module type / removed go facet.</li>
                    <li>[feature] Disabled go formatter (in the process of rebuilding).</li>
                </ul>
        </h3>
        <h3>0.2.9 changes:</h3>
                <ul>
                    <li>[bugfix] wrong indent when hitting enter in top level elements</li>
                    <li>[bugfix] parsing infinite loop with the latest go release.</li>
                </ul>
        </h3>

        <h3>0.2.8 features:</h3>
                <ul>
                    <li>[bugfix] wrong indent when hitting enter</li>
                </ul>
        </h3>

        <h3>0.2.7 features:</h3>
                <ul>
                    <li>[feature] Type name completion.</li>
                    <li>[feature] Code formatting.</li>
                    <li>[bugfix] Some parsing errors.</li>
                </ul>
        </h3>

        <h3>0.2.6 features:</h3>
                <ul>
                    <li>[bugfix] Fix compilation for windows.</li>
                </ul>
        </h3>

        <h3>0.2.5 features:</h3>
                <ul>
                    <li>[bugfix] Force encoding for go files to UTF-8 all the time</li>
                </ul>
        </h3>

        <h3>0.2.4 features:</h3>
                <ul>
                    <li>[bugfix] Make sure the latest go release is detected as a Go Sdk</li>
                </ul>
        </h3>

        <h3>0.2.3 features:</h3>
                <ul>
                    <li>[feature] Go To definition (for types) works across files and Go SDK</li>
                    <li>[feature] ColorsAndSettings page with a new color scheme</li>
                    <li>[feature] Automatically add new line at end of file</li>
                </ul>
        </h3>

        <h3>0.2.2 features:</h3>
                <ul>
                    <li>[feature] Go To definition (for types defined inside the same file)</li>
                    <li>[bugfixes] Fixed the plugin to work with idea 9.0.3.</li>
                </ul>
        </h3>

        <h3>0.2.1 features:</h3>
                <ul>
                    <li>[feature] Update Go SDK (to work with the latest release and on windows)</li>
                    <li>[feature] Compilation of the go applications (supported semantics are similar to those of gobuild)</li>
                    <li>[feature] Go application file and library generation.</li>
                    <li>[feature] Auto completion of sdk package names and/or local application packages.</li>
                    <li>[bugfixes] Some parsing issues with comments.</li>
                </ul>
        </h3>

        <h3>0.1.1 features:</h3>
                <ul>
                    <li>[feature] Go Sdk type (with auto configuration)</li>
                    <li>[feature] Icons</li>
                </ul>
        </h3>

        <h3>0.1.0 features:</h3>
                <ul>
                    <li>[feature] basic language parsing and highlighting</li>
                    <li>[feature] Code folding</li>
                    <li>[feature] Brace matching</li>
                    <li>[feature] Comment/Uncomment (Single/Multiple line) support</li>
                </ul>
        ]]>
	</change-notes>

	<category>Custom Languages</category>
	<resource-bundle>ro.redeul.google.go.GoBundle</resource-bundle>

	<depends>com.intellij</depends>
	<depends>org.consulo.java</depends>
	<!--TODO [VISTALL] removed it!!!!-->
	<depends config-file="com.intellij.spellchecker.xml">com.intellij.spellchecker</depends>

	<application-components>
		<component>
			<implementation-class>
				ro.redeul.google.go.components.GoBundledSdkDetector
			</implementation-class>
		</component>

		<component>
			<implementation-class>
				ro.redeul.google.go.components.GoSdkParsingHelper
			</implementation-class>
		</component>

		<component>
			<implementation-class>
				ro.redeul.google.go.components.GoFileTypeRegistrationValidator
			</implementation-class>
		</component>

	</application-components>

	<project-components>

		<!-- Add your project components here -->
		<component>
			<implementation-class>
				ro.redeul.google.go.components.GoCompilerLoader
			</implementation-class>
		</component>

		<component>
			<implementation-class>
				ro.redeul.google.go.imports.AutoImportHighlightingPassFactory
			</implementation-class>
		</component>
		<component>
			<implementation-class>
				ro.redeul.google.go.components.ProjectSdkValidator
			</implementation-class>
		</component>
	</project-components>

	<actions>
		<group id="Go.ActionGroup" popup="true" text="Go" description="ads" icon="/icons/go_16x16.png" class="ro.redeul.google.go.actions.NewGoGroup">

			<action id="Go.NewApplication" text="Go application" description="Create new application in the GO language" class="ro.redeul.google.go.actions.NewGoApplicationAction"/>

			<action id="Go.NewLibrary" text="Go library" description="Create new library in the GO language" class="ro.redeul.google.go.actions.NewGoLibraryAction"/>


			<add-to-group group-id="NewGroup" anchor="before" relative-to-action="NewFile"/>
		</group>

		<action id="Go.NewFile" text="Go file" description="Create a new Go in the current project" class="ro.redeul.google.go.actions.NewGoFileAction">

			<add-to-group group-id="NewGroup" anchor="before" relative-to-action="Go.ActionGroup"/>
		</action>

		<group id="Go.Tools" popup="true" text="Go Tools" description="Go tools support" icon="/icons/go_16x16.png">
			<!--<action id="Go.Tools.AddGoSdk" text="Add Go Sdk Support"-->
			<!--description="Add Go Sdk to current module"-->
			<!--class="ro.redeul.google.go.tools.actions.AddGoSdkSupport">-->
			<!--</action>-->

			<action id="Go.AppEngine.Upload" class="ro.redeul.google.go.ide.actions.GoAppEngineUpload" text="App Engine Upload" description="Upload to App Engine" icon="/icons/gae_16x16.png">
				<keyboard-shortcut first-keystroke="ctrl alt U" keymap="$default"/>
			</action>

			<add-to-group group-id="ToolsMenu" anchor="last"/>
		</group>

	</actions>

	<extensions defaultExtensionNs="com.intellij">

		<applicationService serviceInterface="ro.redeul.google.go.ide.GoAppEngineSettings" serviceImplementation="ro.redeul.google.go.ide.GoAppEngineSettings"/>

		<applicationConfigurable instance="ro.redeul.google.go.ide.GoAppEngineSettingsConfigurable"/>

		<moduleExtensionProvider key="google-go" implementationClass="ro.redeul.google.go.module.extension.GoModuleExtensionProvider"/>
		<fileTypeFactory implementation="ro.redeul.google.go.GoFileTypeLoader"/>

		<projectService serviceInterface="ro.redeul.google.go.ide.GoProjectSettings" serviceImplementation="ro.redeul.google.go.ide.GoProjectSettings"/>

		<projectConfigurable instance="ro.redeul.google.go.ide.GoConfigurable"/>

		<applicationService serviceInterface="ro.redeul.google.go.options.GoSettings" serviceImplementation="ro.redeul.google.go.options.GoSettings"/>
		<exportable serviceInterface="ro.redeul.google.go.options.GoSettings"/>
		<autoImportOptionsProvider instance="ro.redeul.google.go.imports.GoAutoImportOptionsProvider"/>

		<langCodeStyleSettingsProvider implementation="ro.redeul.google.go.ide.GoLanguageCodeStyleSettingsProvider"/>
		<codeStyleSettingsProvider implementation="ro.redeul.google.go.ide.GoCodeStyleSettingsProvider"/>


		<quoteHandler fileType="Google Go" className="ro.redeul.google.go.codeInsight.editorActions.GoQuoteHandler"/>

		<lang.syntaxHighlighterFactory key="Google Go" implementationClass="ro.redeul.google.go.highlight.GoSyntaxHighlighterFactory"/>

		<highlightUsagesHandlerFactory implementation="ro.redeul.google.go.highlight.HighlightExitPointsHandlerFactory"/>
		<readWriteAccessDetector implementation="ro.redeul.google.go.highlight.GoReadWriteAccessDetector"/>

		<lang.parserDefinition language="Google Go" implementationClass="ro.redeul.google.go.lang.parser.GoParserDefinition"/>
		<lang.braceMatcher language="Google Go" implementationClass="ro.redeul.google.go.highlight.GoBraceMatcher"/>
		<lang.foldingBuilder language="Google Go" implementationClass="ro.redeul.google.go.lang.folding.GoFoldingBuilder"/>
		<lang.commenter language="Google Go" implementationClass="ro.redeul.google.go.highlight.GoCommenter"/>
		<lang.findUsagesProvider language="Google Go" implementationClass="ro.redeul.google.go.findUsages.GoFindUsagesProvider"/>
		<lang.refactoringSupport language="Google Go" implementationClass="ro.redeul.google.go.refactoring.GoRefactoringSupportProvider"/>

		<inlineActionHandler implementation="ro.redeul.google.go.refactoring.inline.InlineLocalVariableActionHandler"/>

		<lang.formatter language="Google Go" implementationClass="ro.redeul.google.go.formatter.GoFormattingModelBuilder"/>
		<lang.psiStructureViewFactory language="Google Go" implementationClass="ro.redeul.google.go.ide.structureview.GoStructureView"/>
		<lang.importOptimizer language="Google Go" implementationClass="ro.redeul.google.go.imports.GoImportOptimizer"/>
		<lang.documentationProvider language="Google Go" implementationClass="ro.redeul.google.go.lang.documentation.GoDocumentationProvider"/>
		<lang.smartEnterProcessor language="Google Go" implementationClass="ro.redeul.google.go.lang.completion.smartEnter.GoSmartEnterProcessor"/>
		<codeInsight.parameterInfo language="Google Go" implementationClass="ro.redeul.google.go.lang.parameterInfo.GoParameterInfoHandler"/>

		<compileServer.plugin/>
		<!-- SM Test runner tests locations -->
		<testSrcLocator implementation="ro.redeul.google.go.runner.GoTestLocationProvider"/>

		<annotator language="Google Go" implementationClass="ro.redeul.google.go.annotator.GoAnnotator"/>

		<completion.contributor language="Google Go" implementationClass="ro.redeul.google.go.lang.completion.GoCompletionContributor" id="goBasicCompletion"/>
		<completion.contributor language="Google Go" implementationClass="ro.redeul.google.go.lang.completion.GoNoVariantsDelegator" id="goNoVariantsDelegator" order="before goBasicCompletion"/>

		<gotoClassContributor implementation="ro.redeul.google.go.ide.contributor.GoGoToClassContributor"/>
		<gotoSymbolContributor implementation="ro.redeul.google.go.ide.contributor.GoGoToSymbolContributor"/>
		<!--<frameworkSupport implementation="ro.redeul.google.go.config.framework.GoFrameworkSupportProvider"/>-->
		<!--<facetType implementation="ro.redeul.google.go.config.facet.GoFacetType"/>-->
		<sdkType implementation="ro.redeul.google.go.config.sdk.GoSdkType"/>
		<sdkType implementation="ro.redeul.google.go.config.sdk.GoAppEngineSdkType"/>

		<!--<compiler.makeDependencyProcessor implementation="ro.redeul.google.go.compilation.GoDependencyProvider"/>-->
		<compiler implementation="ro.redeul.google.go.compilation.GoCompiler" />
		<compiler implementation="ro.redeul.google.go.compilation.GoMakefileCompiler" />

		<configurationType implementation="ro.redeul.google.go.runner.GoRunConfigurationType"/>
		<configurationType implementation="ro.redeul.google.go.runner.GoTestConfigurationType"/>
		<configurationType implementation="ro.redeul.google.go.runner.GoAppEngineRunConfigurationType"/>
		<configurationProducer implementation="ro.redeul.google.go.runner.GoRunConfigurationProducer"/>
		<configurationProducer implementation="ro.redeul.google.go.runner.GoTestConfigurationProducer"/>

		<customLiveTemplate implementation="ro.redeul.google.go.editor.GoCustomLiveTemplate"/>

		<liveTemplateContext implementation="ro.redeul.google.go.template.GoTemplateContextType$Generic"/>
		<liveTemplateContext implementation="ro.redeul.google.go.template.GoTemplateContextType$Function"/>

		<liveTemplateMacro implementation="ro.redeul.google.go.template.macro.FunctionNameMacro"/>
		<liveTemplateMacro implementation="ro.redeul.google.go.template.macro.ParameterListMacro"/>
		<liveTemplateMacro implementation="ro.redeul.google.go.template.macro.ParameterFormatMacro"/>

		<defaultLiveTemplatesProvider implementation="ro.redeul.google.go.template.GoTemplatesProvider"/>

		<fileTemplateGroup implementation="ro.redeul.google.go.actions.GoTemplatesFactory"/>

		<colorSettingsPage implementation="ro.redeul.google.go.editor.highlighting.GoColorsAndFontsPage"/>

		<localInspection groupName="Google Go" language="Google Go" enabledByDefault="true" shortName="UnresolvedSymbols" displayName="Highlights unresolved symbols" level="ERROR"
						 implementationClass="ro.redeul.google.go.inspection.UnresolvedSymbols"/>
		<localInspection groupName="Google Go" language="Google Go" enabledByDefault="true" shortName="ImportDeclaration" displayName="Highlights incorrect import declarations" level="ERROR"
						 implementationClass="ro.redeul.google.go.inspection.ImportDeclarationInspection"/>
		<localInspection groupName="Google Go" language="Google Go" enabledByDefault="true" shortName="InvalidPackageName" displayName="Highlights invalid package name" level="ERROR"
						 implementationClass="ro.redeul.google.go.inspection.InvalidPackageNameInspection"/>
		<localInspection groupName="Google Go" language="Google Go" enabledByDefault="true" shortName="FmtUsage" displayName="Highlights incorrect fmt parameters" level="WARNING"
						 implementationClass="ro.redeul.google.go.inspection.FmtUsageInspection"/>
		<localInspection groupName="Google Go" language="Google Go" enabledByDefault="true" shortName="FunctionCall" displayName="Highlights incorrect function calls" level="ERROR"
						 implementationClass="ro.redeul.google.go.inspection.FunctionCallInspection"/>
		<localInspection groupName="Google Go" language="Google Go" enabledByDefault="true" shortName="TypeStructDeclaration" displayName="Highlights incorrect struct declaration" level="ERROR"
						 implementationClass="ro.redeul.google.go.inspection.TypeStructDeclarationInspection"/>
		<localInspection groupName="Google Go" language="Google Go" enabledByDefault="true" shortName="LabelUsage" displayName="Highlights incorrect label usage" level="ERROR"
						 implementationClass="ro.redeul.google.go.inspection.LabelUsageInspection"/>
		<localInspection groupName="Google Go" language="Google Go" enabledByDefault="true" shortName="ConstantExpressionsInConstDeclarations" displayName="Highlights non constant expressions used in constant definitions" level="ERROR"
						 implementationClass="ro.redeul.google.go.inspection.ConstantExpressionsInConstDeclarationsInspection"/>

		<programRunner implementation="ro.redeul.google.go.runner.GoApplicationRunner"/>
		<programRunner implementation="ro.redeul.google.go.runner.GoAppEngineApplicationRunner"/>

		<testFinder implementation="ro.redeul.google.go.testIntegration.GoTestFinder"/>
		<testCreator language="Google Go" implementationClass="ro.redeul.google.go.testIntegration.GoTestCreator"/>

		<stubElementTypeHolder class="ro.redeul.google.go.lang.parser.GoElementTypes"/>

		<stubIndex implementation="ro.redeul.google.go.lang.psi.stubs.index.GoPackageName"/>
		<stubIndex implementation="ro.redeul.google.go.lang.psi.stubs.index.GoPackageImportPath"/>
		<stubIndex implementation="ro.redeul.google.go.lang.psi.stubs.index.GoTypeName"/>
		<stubIndex implementation="ro.redeul.google.go.lang.psi.stubs.index.GoQualifiedTypeName"/>

		<enterHandlerDelegate implementation="ro.redeul.google.go.editor.actions.GoEnterHandler" order="after EnterBetweenBracesHandler"/>

		<projectService serviceInterface="ro.redeul.google.go.services.GoCodeManager" serviceImplementation="ro.redeul.google.go.services.GoCodeManager"/>

		<projectService serviceInterface="ro.redeul.google.go.services.GoPsiManager" serviceImplementation="ro.redeul.google.go.services.GoPsiManager"/>

		<!-- wizards -->
		<!-- Editor tweaks -->
		<fileDocumentManagerListener implementation="ro.redeul.google.go.components.EditorTweakingComponent"/>

		<todoIndexer filetype="Google Go" implementationClass="ro.redeul.google.go.highlight.GoToDoIndexer"/>

		<exceptionFilter implementation="ro.redeul.google.go.ide.exception.GoExceptionFilterFactory"/>

		<intentionAction>
			<bundleName>ro.redeul.google.go.intentions.GoIntentionsBundle</bundleName>
			<categoryKey>intention.category.go/intention.category.control.flow
			</categoryKey>
			<className>ro.redeul.google.go.intentions.control.SplitIfIntention</className>
		</intentionAction>

		<intentionAction>
			<bundleName>ro.redeul.google.go.intentions.GoIntentionsBundle</bundleName>
			<categoryKey>intention.category.go/intention.category.control.flow
			</categoryKey>
			<className>ro.redeul.google.go.intentions.control.InvertIfIntention</className>
		</intentionAction>

		<intentionAction>
			<bundleName>ro.redeul.google.go.intentions.GoIntentionsBundle</bundleName>
			<categoryKey>intention.category.go/intention.category.control.flow
			</categoryKey>
			<className>ro.redeul.google.go.intentions.control.MergeIfAndIntention</className>
		</intentionAction>

		<intentionAction>
			<bundleName>ro.redeul.google.go.intentions.GoIntentionsBundle</bundleName>
			<categoryKey>intention.category.go/intention.category.conversions
			</categoryKey>
			<className>ro.redeul.google.go.intentions.conversions.ConvertIntegerToHexIntention</className>
		</intentionAction>

		<intentionAction>
			<bundleName>ro.redeul.google.go.intentions.GoIntentionsBundle</bundleName>
			<categoryKey>intention.category.go/intention.category.conversions
			</categoryKey>
			<className>ro.redeul.google.go.intentions.conversions.ConvertIntegerToOctalIntention</className>
		</intentionAction>

		<intentionAction>
			<bundleName>ro.redeul.google.go.intentions.GoIntentionsBundle</bundleName>
			<categoryKey>intention.category.go/intention.category.conversions
			</categoryKey>
			<className>ro.redeul.google.go.intentions.conversions.ConvertIntegerToDecimalIntention</className>
		</intentionAction>

		<intentionAction>
			<bundleName>ro.redeul.google.go.intentions.GoIntentionsBundle</bundleName>
			<categoryKey>intention.category.go/intention.category.conversions
			</categoryKey>
			<className>ro.redeul.google.go.intentions.conversions.ConvertToRawStringIntention</className>
		</intentionAction>

		<intentionAction>
			<bundleName>ro.redeul.google.go.intentions.GoIntentionsBundle</bundleName>
			<categoryKey>intention.category.go/intention.category.conversions
			</categoryKey>
			<className>ro.redeul.google.go.intentions.conversions.ConvertSwitchToIfIntention</className>
		</intentionAction>

		<intentionAction>
			<bundleName>ro.redeul.google.go.intentions.GoIntentionsBundle</bundleName>
			<categoryKey>intention.category.go/intention.category.statements
			</categoryKey>
			<className>ro.redeul.google.go.intentions.statements.MoveSimpleStatementOutIntention</className>
		</intentionAction>

		<intentionAction>
			<bundleName>ro.redeul.google.go.intentions.GoIntentionsBundle</bundleName>
			<categoryKey>intention.category.go/intention.category.conversions
			</categoryKey>
			<className>ro.redeul.google.go.intentions.conversions.ConvertToInterpretedStringIntention</className>
		</intentionAction>

		<intentionAction>
			<bundleName>ro.redeul.google.go.intentions.GoIntentionsBundle</bundleName>
			<categoryKey>intention.category.go/intention.category.parentheses
			</categoryKey>
			<className>ro.redeul.google.go.intentions.parenthesis.RemoveDeclarationParenthesesIntention</className>
		</intentionAction>

		<intentionAction>
			<bundleName>ro.redeul.google.go.intentions.GoIntentionsBundle</bundleName>
			<categoryKey>intention.category.go/intention.category.parentheses
			</categoryKey>
			<className>ro.redeul.google.go.intentions.parenthesis.AddDeclarationParenthesesIntention</className>
		</intentionAction>
	</extensions>

</idea-plugin>
