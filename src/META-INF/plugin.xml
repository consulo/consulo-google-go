<idea-plugin version="2" url="http://github.com/mtoader/google-go-lang-idea-plugin">
	<id>org.consulo.google.go</id>
	<name>Google Go</name>
	<version>0.9.14</version>
	<vendor email="mtoader@gmail.com" url="http://redeul.ro">mtoader@gmail.com</vendor>
	<description>
		<![CDATA[
        <p>Intellij IDEA support for Go language (see http://golang.org).</p>
        <p>The plugin provides the following features:</p>

        <ul>
            <li>Basic language parsing and highlighting</li>
            <li>Code folding and Brace matching</li>
            <li>Comment/Uncomment (Single/Multiple line) support</li>
            <li>Go application file and library generation.</li>
            <li>Auto completion of sdk package names and/or local application packages.</li>
            <li>Compilation of the go applications (supported semantics are similar to those of gobuild)</li>
            <li>Native plugin code formatter</li>
            <li>GoTo class (go types) implementation</li>
            <li>ColorsAndSettings page with a new color scheme</li>
            <li>Completion/Resolution of vars/types/functions/structs/methods (works across some expression chains).</li>
            <li>Refactorings: Introduce variable/constant</li>
            <li>Inspections: Unused imports/variables/constants/parameters/symbols</li>
            <li>Inspections: Validate the format param for the fmt.Print suite of functions</li>
            <li>Inspections: Detect non constant expression used in constant declarations</li>
            <li>Intentions: Invert if condition/Merge nested 'if's/Split into 2 'if's/Convert switch statement to if chain.</li>
            <li>Intentions: Convert between interpreted string and raw string.</li>
            <li>Intention: Add/Remove parentheses.</li>
            <li>Intention: Move simple statement out.</li>
            <li>Inspection: Validate that the package names in files are correct with respect of the folder name.</li>
            <li>Documentation for functions, methods, variable, constants and types.</li>
            <li>Function parameter information.</li>
            <li>Ctrl+Shift+T to jump between source file and test file.</li>
            <li>Navigation from stack trace in output panel.</li>
            <li>Ctrl+Shift+Enter to add curly brackets for "func", "if" and "for" statements.</li>
            <li>Live templates: "sout", "souf", "soutm" and "soutp".</li>
            <li>Go aware imports optimizer and auto import generator</li>
            <li>Import usage highlighting (and detecting of wrong imports)</li>
            <li>Better Structure view</li>
            <li>Automatically add new line at end of file</li>
            <li>Force UTF-8 encoding for go files</li>
            <li>Detection of bundled Go Sdk packages (useful when deployed as GoIde)</li>
            <li>Run configuration creator (right click on a program file and you can run it). </li>
            <li>Go SDK (Go 1.0 on linux/mac/windows)</li>
            <li>Go module type</li>
            <li>Go App engine sdk type</li>
            <li>Go App engine credentials safe storage</li>
            <li>Added go application wizard</li>
            <li>Makefile based build system (bring your own Makefile). Experimental. Configured in project settings.</li>
            <li>Always use tabs instead of spaces (but configurable if desired).</li>
        </ul>
    ]]>
	</description>

	<category>Custom Languages</category>
	<resource-bundle>ro.redeul.google.go.GoBundle</resource-bundle>

	<depends>com.intellij</depends>
	<depends config-file="com.intellij.spellchecker.xml">com.intellij.spellchecker</depends>

	<application-components>
		<component>
			<implementation-class>
				ro.redeul.google.go.components.GoBundledSdkDetector
			</implementation-class>
		</component>

		<component>
			<implementation-class>
				ro.redeul.google.go.components.GoSdkParsingHelper
			</implementation-class>
		</component>

		<component>
			<implementation-class>
				ro.redeul.google.go.components.GoFileTypeRegistrationValidator
			</implementation-class>
		</component>

	</application-components>

	<project-components>

		<!-- Add your project components here -->
		<component>
			<implementation-class>
				ro.redeul.google.go.components.GoCompilerLoader
			</implementation-class>
		</component>

		<component>
			<implementation-class>
				ro.redeul.google.go.imports.AutoImportHighlightingPassFactory
			</implementation-class>
		</component>
		<component>
			<implementation-class>
				ro.redeul.google.go.components.ProjectSdkValidator
			</implementation-class>
		</component>
	</project-components>

	<actions>
		<group id="Go.ActionGroup" popup="true" text="Go" description="ads" icon="/icons/go.png" class="ro.redeul.google.go.actions.NewGoGroup">

			<action id="Go.NewApplication" text="Go application" description="Create new application in the GO language" class="ro.redeul.google.go.actions.NewGoApplicationAction"/>

			<action id="Go.NewLibrary" text="Go library" description="Create new library in the GO language" class="ro.redeul.google.go.actions.NewGoLibraryAction"/>


			<add-to-group group-id="NewGroup" anchor="before" relative-to-action="NewFile"/>
		</group>

		<action id="Go.NewFile" text="Go file" description="Create a new Go in the current project" class="ro.redeul.google.go.actions.NewGoFileAction">

			<add-to-group group-id="NewGroup" anchor="before" relative-to-action="Go.ActionGroup"/>
		</action>

		<!--<group id="Go.Tools" popup="true" text="Go Tools" description="Go tools support" icon="/icons/go.png"> -->
			<!--<action id="Go.Tools.AddGoSdk" text="Add Go Sdk Support"-->
			<!--description="Add Go Sdk to current module"-->
			<!--class="ro.redeul.google.go.tools.actions.AddGoSdkSupport">-->
			<!--</action>-->

	<!--		<add-to-group group-id="ToolsMenu" anchor="last"/>
		</group> -->

	</actions>

	<extensions defaultExtensionNs="com.intellij">

		<applicationService serviceInterface="ro.redeul.google.go.ide.GoAppEngineSettings" serviceImplementation="ro.redeul.google.go.ide.GoAppEngineSettings"/>

		<moduleExtensionProvider key="google-go" implementationClass="ro.redeul.google.go.module.extension.GoModuleExtensionProvider"/>
		<psi.packageSupportProvider implementation="org.consulo.googe.go.module.packageSupport.GoPsiPackageSupportProvider" />

		<fileTypeFactory implementation="ro.redeul.google.go.GoFileTypeLoader"/>

		<projectService serviceInterface="ro.redeul.google.go.ide.GoProjectSettings" serviceImplementation="ro.redeul.google.go.ide.GoProjectSettings"/>

		<projectConfigurable instance="ro.redeul.google.go.ide.GoConfigurable"/>

		<applicationService serviceInterface="ro.redeul.google.go.options.GoSettings" serviceImplementation="ro.redeul.google.go.options.GoSettings"/>
		<exportable serviceInterface="ro.redeul.google.go.options.GoSettings"/>
		<autoImportOptionsProvider instance="ro.redeul.google.go.imports.GoAutoImportOptionsProvider"/>

		<langCodeStyleSettingsProvider implementation="ro.redeul.google.go.ide.GoLanguageCodeStyleSettingsProvider"/>
		<codeStyleSettingsProvider implementation="ro.redeul.google.go.ide.GoCodeStyleSettingsProvider"/>


		<quoteHandler fileType="Google Go" className="ro.redeul.google.go.codeInsight.editorActions.GoQuoteHandler"/>

		<lang.syntaxHighlighterFactory key="Google Go" implementationClass="ro.redeul.google.go.highlight.GoSyntaxHighlighterFactory"/>

		<highlightUsagesHandlerFactory implementation="ro.redeul.google.go.highlight.HighlightExitPointsHandlerFactory"/>
		<readWriteAccessDetector implementation="ro.redeul.google.go.highlight.GoReadWriteAccessDetector"/>

		<lang.parserDefinition language="Google Go" implementationClass="ro.redeul.google.go.lang.parser.GoParserDefinition"/>
		<lang.braceMatcher language="Google Go" implementationClass="ro.redeul.google.go.highlight.GoBraceMatcher"/>
		<lang.foldingBuilder language="Google Go" implementationClass="ro.redeul.google.go.lang.folding.GoFoldingBuilder"/>
		<lang.commenter language="Google Go" implementationClass="ro.redeul.google.go.highlight.GoCommenter"/>
		<lang.findUsagesProvider language="Google Go" implementationClass="ro.redeul.google.go.findUsages.GoFindUsagesProvider"/>
		<lang.refactoringSupport language="Google Go" implementationClass="ro.redeul.google.go.refactoring.GoRefactoringSupportProvider"/>

		<inlineActionHandler implementation="ro.redeul.google.go.refactoring.inline.InlineLocalVariableActionHandler"/>

		<lang.formatter language="Google Go" implementationClass="ro.redeul.google.go.formatter.GoFormattingModelBuilder"/>
		<lang.psiStructureViewFactory language="Google Go" implementationClass="ro.redeul.google.go.ide.structureview.GoStructureView"/>
		<lang.importOptimizer language="Google Go" implementationClass="ro.redeul.google.go.imports.GoImportOptimizer"/>
		<lang.documentationProvider language="Google Go" implementationClass="ro.redeul.google.go.lang.documentation.GoDocumentationProvider"/>
		<lang.smartEnterProcessor language="Google Go" implementationClass="ro.redeul.google.go.lang.completion.smartEnter.GoSmartEnterProcessor"/>
		<codeInsight.parameterInfo language="Google Go" implementationClass="ro.redeul.google.go.lang.parameterInfo.GoParameterInfoHandler"/>

		<!-- SM Test runner tests locations -->
		<testSrcLocator implementation="ro.redeul.google.go.runner.GoTestLocationProvider"/>

		<annotator language="Google Go" implementationClass="ro.redeul.google.go.annotator.GoAnnotator"/>

		<completion.contributor language="Google Go" implementationClass="ro.redeul.google.go.lang.completion.GoCompletionContributor" id="goBasicCompletion"/>
		<completion.contributor language="Google Go" implementationClass="ro.redeul.google.go.lang.completion.GoNoVariantsDelegator" id="goNoVariantsDelegator" order="before goBasicCompletion"/>

		<gotoClassContributor implementation="ro.redeul.google.go.ide.contributor.GoGoToClassContributor"/>
		<gotoSymbolContributor implementation="ro.redeul.google.go.ide.contributor.GoGoToSymbolContributor"/>
		<!--<frameworkSupport implementation="ro.redeul.google.go.config.framework.GoFrameworkSupportProvider"/>-->
		<sdkType implementation="ro.redeul.google.go.config.sdk.GoSdkType"/>

		<!--<compiler.makeDependencyProcessor implementation="ro.redeul.google.go.compilation.GoDependencyProvider"/>-->
		<compiler implementation="ro.redeul.google.go.compilation.GoCompiler" />
		<!--<compiler implementation="ro.redeul.google.go.compilation.GoMakefileCompiler" />  -->

		<configurationType implementation="ro.redeul.google.go.runner.GoRunConfigurationType"/>
		<configurationType implementation="ro.redeul.google.go.runner.GoTestConfigurationType"/>
		<configurationProducer implementation="ro.redeul.google.go.runner.GoRunConfigurationProducer"/>
		<configurationProducer implementation="ro.redeul.google.go.runner.GoTestConfigurationProducer"/>

		<customLiveTemplate implementation="ro.redeul.google.go.editor.GoCustomLiveTemplate"/>

		<liveTemplateContext implementation="ro.redeul.google.go.template.GoTemplateContextType$Generic"/>
		<liveTemplateContext implementation="ro.redeul.google.go.template.GoTemplateContextType$Function"/>

		<liveTemplateMacro implementation="ro.redeul.google.go.template.macro.FunctionNameMacro"/>
		<liveTemplateMacro implementation="ro.redeul.google.go.template.macro.ParameterListMacro"/>
		<liveTemplateMacro implementation="ro.redeul.google.go.template.macro.ParameterFormatMacro"/>

		<defaultLiveTemplatesProvider implementation="ro.redeul.google.go.template.GoTemplatesProvider"/>

		<fileTemplateGroup implementation="ro.redeul.google.go.actions.GoTemplatesFactory"/>

		<colorSettingsPage implementation="ro.redeul.google.go.editor.highlighting.GoColorsAndFontsPage"/>

		<localInspection groupName="Google Go" language="Google Go" enabledByDefault="true" shortName="UnresolvedSymbols" displayName="Highlights unresolved symbols" level="ERROR"
						 implementationClass="ro.redeul.google.go.inspection.UnresolvedSymbols"/>
		<localInspection groupName="Google Go" language="Google Go" enabledByDefault="true" shortName="ImportDeclaration" displayName="Highlights incorrect import declarations" level="ERROR"
						 implementationClass="ro.redeul.google.go.inspection.ImportDeclarationInspection"/>
		<localInspection groupName="Google Go" language="Google Go" enabledByDefault="true" shortName="InvalidPackageName" displayName="Highlights invalid package name" level="ERROR"
						 implementationClass="ro.redeul.google.go.inspection.InvalidPackageNameInspection"/>
		<localInspection groupName="Google Go" language="Google Go" enabledByDefault="true" shortName="FmtUsage" displayName="Highlights incorrect fmt parameters" level="WARNING"
						 implementationClass="ro.redeul.google.go.inspection.FmtUsageInspection"/>
		<localInspection groupName="Google Go" language="Google Go" enabledByDefault="true" shortName="FunctionCall" displayName="Highlights incorrect function calls" level="ERROR"
						 implementationClass="ro.redeul.google.go.inspection.FunctionCallInspection"/>
		<localInspection groupName="Google Go" language="Google Go" enabledByDefault="true" shortName="TypeStructDeclaration" displayName="Highlights incorrect struct declaration" level="ERROR"
						 implementationClass="ro.redeul.google.go.inspection.TypeStructDeclarationInspection"/>
		<localInspection groupName="Google Go" language="Google Go" enabledByDefault="true" shortName="LabelUsage" displayName="Highlights incorrect label usage" level="ERROR"
						 implementationClass="ro.redeul.google.go.inspection.LabelUsageInspection"/>
		<localInspection groupName="Google Go" language="Google Go" enabledByDefault="true" shortName="ConstantExpressionsInConstDeclarations" displayName="Highlights non constant expressions used in constant definitions" level="ERROR"
						 implementationClass="ro.redeul.google.go.inspection.ConstantExpressionsInConstDeclarationsInspection"/>

		<programRunner implementation="ro.redeul.google.go.runner.GoApplicationRunner"/>

		<testFinder implementation="ro.redeul.google.go.testIntegration.GoTestFinder"/>
		<testCreator language="Google Go" implementationClass="ro.redeul.google.go.testIntegration.GoTestCreator"/>

		<stubElementTypeHolder class="ro.redeul.google.go.lang.parser.GoElementTypes"/>

		<stubIndex implementation="ro.redeul.google.go.lang.psi.stubs.index.GoPackageName"/>
		<stubIndex implementation="ro.redeul.google.go.lang.psi.stubs.index.GoPackageImportPath"/>
		<stubIndex implementation="ro.redeul.google.go.lang.psi.stubs.index.GoTypeName"/>
		<stubIndex implementation="ro.redeul.google.go.lang.psi.stubs.index.GoQualifiedTypeName"/>

		<enterHandlerDelegate implementation="ro.redeul.google.go.editor.actions.GoEnterHandler" order="after EnterBetweenBracesHandler"/>

		<projectService serviceInterface="ro.redeul.google.go.services.GoCodeManager" serviceImplementation="ro.redeul.google.go.services.GoCodeManager"/>

		<projectService serviceInterface="ro.redeul.google.go.services.GoPsiManager" serviceImplementation="ro.redeul.google.go.services.GoPsiManager"/>

		<!-- wizards -->
		<!-- Editor tweaks -->
		<fileDocumentManagerListener implementation="ro.redeul.google.go.components.EditorTweakingComponent"/>

		<todoIndexer filetype="Google Go" implementationClass="ro.redeul.google.go.highlight.GoToDoIndexer"/>

		<!--<exceptionFilter implementation="ro.redeul.google.go.ide.exception.GoExceptionFilterFactory"/>-->

		<intentionAction>
			<bundleName>ro.redeul.google.go.intentions.GoIntentionsBundle</bundleName>
			<categoryKey>intention.category.go/intention.category.control.flow
			</categoryKey>
			<className>ro.redeul.google.go.intentions.control.SplitIfIntention</className>
		</intentionAction>

		<intentionAction>
			<bundleName>ro.redeul.google.go.intentions.GoIntentionsBundle</bundleName>
			<categoryKey>intention.category.go/intention.category.control.flow
			</categoryKey>
			<className>ro.redeul.google.go.intentions.control.InvertIfIntention</className>
		</intentionAction>

		<intentionAction>
			<bundleName>ro.redeul.google.go.intentions.GoIntentionsBundle</bundleName>
			<categoryKey>intention.category.go/intention.category.control.flow
			</categoryKey>
			<className>ro.redeul.google.go.intentions.control.MergeIfAndIntention</className>
		</intentionAction>

		<intentionAction>
			<bundleName>ro.redeul.google.go.intentions.GoIntentionsBundle</bundleName>
			<categoryKey>intention.category.go/intention.category.conversions
			</categoryKey>
			<className>ro.redeul.google.go.intentions.conversions.ConvertIntegerToHexIntention</className>
		</intentionAction>

		<intentionAction>
			<bundleName>ro.redeul.google.go.intentions.GoIntentionsBundle</bundleName>
			<categoryKey>intention.category.go/intention.category.conversions
			</categoryKey>
			<className>ro.redeul.google.go.intentions.conversions.ConvertIntegerToOctalIntention</className>
		</intentionAction>

		<intentionAction>
			<bundleName>ro.redeul.google.go.intentions.GoIntentionsBundle</bundleName>
			<categoryKey>intention.category.go/intention.category.conversions
			</categoryKey>
			<className>ro.redeul.google.go.intentions.conversions.ConvertIntegerToDecimalIntention</className>
		</intentionAction>

		<intentionAction>
			<bundleName>ro.redeul.google.go.intentions.GoIntentionsBundle</bundleName>
			<categoryKey>intention.category.go/intention.category.conversions
			</categoryKey>
			<className>ro.redeul.google.go.intentions.conversions.ConvertToRawStringIntention</className>
		</intentionAction>

		<intentionAction>
			<bundleName>ro.redeul.google.go.intentions.GoIntentionsBundle</bundleName>
			<categoryKey>intention.category.go/intention.category.conversions
			</categoryKey>
			<className>ro.redeul.google.go.intentions.conversions.ConvertSwitchToIfIntention</className>
		</intentionAction>

		<intentionAction>
			<bundleName>ro.redeul.google.go.intentions.GoIntentionsBundle</bundleName>
			<categoryKey>intention.category.go/intention.category.statements
			</categoryKey>
			<className>ro.redeul.google.go.intentions.statements.MoveSimpleStatementOutIntention</className>
		</intentionAction>

		<intentionAction>
			<bundleName>ro.redeul.google.go.intentions.GoIntentionsBundle</bundleName>
			<categoryKey>intention.category.go/intention.category.conversions
			</categoryKey>
			<className>ro.redeul.google.go.intentions.conversions.ConvertToInterpretedStringIntention</className>
		</intentionAction>

		<intentionAction>
			<bundleName>ro.redeul.google.go.intentions.GoIntentionsBundle</bundleName>
			<categoryKey>intention.category.go/intention.category.parentheses
			</categoryKey>
			<className>ro.redeul.google.go.intentions.parenthesis.RemoveDeclarationParenthesesIntention</className>
		</intentionAction>

		<intentionAction>
			<bundleName>ro.redeul.google.go.intentions.GoIntentionsBundle</bundleName>
			<categoryKey>intention.category.go/intention.category.parentheses
			</categoryKey>
			<className>ro.redeul.google.go.intentions.parenthesis.AddDeclarationParenthesesIntention</className>
		</intentionAction>
	</extensions>

</idea-plugin>
